
#include "PCH-framework.h"
#include "imgtools.h"

namespace DbgFont {

// ======================================================================================================
// DbgFont - Debug Font Details:
//  * chars 0->127     are 6x8 -  5x8 with 1 column spacing.
//
// The original font set used to have extrended 8x8 characters for drawing menu decorations, but it was
// removed because there's just no way those could compete with the flexibility and simplicitly of
// Dear ImGui.
//
// No effort should be made to turn this into a more advanced API that can support multiple fonts or variable-
// width fonts or whatever other nonsense.  The purpose here is a debug font, simple, lightweight, and zero
// external dependencies.
// ======================================================================================================

static const uint8_t GlyphData[][BytesPerGlyph] =
{
    {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, // 0..7
    {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, // 8..15
    {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, // 16..23
    {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, {0,0,0,0,0,0,0,0,}, // 24..31

    { // 32
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
    },
    { // 33
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
        0x20, // ..*...
        0x00, // ......
    },
    { // 34
        0x50, // .*.*..
        0x50, // .*.*..
        0x50, // .*.*..
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
    },
    { // 35
        0x50, // .*.*..
        0x50, // .*.*..
        0xf8, // *****.
        0x50, // .*.*..
        0xf8, // *****.
        0x50, // .*.*..
        0x50, // .*.*..
        0x00, // ......
    },
    { // 36
        0x20, // ..*...
        0x78, // .****.
        0xa0, // *.*...
        0x70, // .***..
        0x28, // ..*.*.
        0xf0, // ****..
        0x20, // ..*...
        0x00, // ......
    },
    { // 37
        0xc0, // **....
        0xc8, // **..*.
        0x10, // ...*..
        0x20, // ..*...
        0x40, // .*....
        0x98, // *..**.
        0x18, // ...**.
        0x00, // ......
    },
    { // 38
        0x40, // .*....
        0xa0, // *.*...
        0xa0, // *.*...
        0x40, // .*....
        0xa8, // *.*.*.
        0x90, // *..*..
        0x68, // .**.*.
        0x00, // ......
    },
    { // 39
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
    },
    { // 40
        0x20, // ..*...
        0x40, // .*....
        0x80, // *.....
        0x80, // *.....
        0x80, // *.....
        0x40, // .*....
        0x20, // ..*...
        0x00, // ......
    },
    { // 41
        0x20, // ..*...
        0x10, // ...*..
        0x08, // ....*.
        0x08, // ....*.
        0x08, // ....*.
        0x10, // ...*..
        0x20, // ..*...
        0x00, // ......
    },
    { // 42
        0x20, // ..*...
        0xa8, // *.*.*.
        0x70, // .***..
        0xa8, // *.*.*.
        0x70, // .***..
        0xa8, // *.*.*.
        0x20, // ..*...
        0x00, // ......
    },
    { // 43
        0x00, // ......
        0x20, // ..*...
        0x20, // ..*...
        0xf8, // *****.
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
        0x00, // ......
    },
    { // 44
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x20, // ..*...
        0x20, // ..*...
        0x40, // .*....
    },
    { // 45
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0xf8, // *****.
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
    },
    { // 46
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x20, // ..*...
        0x00, // ......
    },
    { // 47
        0x00, // ......
        0x08, // ....*.
        0x10, // ...*..
        0x20, // ..*...
        0x40, // .*....
        0x80, // *.....
        0x00, // ......
        0x00, // ......
    },
    { // 48
        0x70, // .***..
        0x88, // *...*.
        0x98, // *..**.
        0xa8, // *.*.*.
        0xc8, // **..*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 49
        0x20, // ..*...
        0x60, // .**...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x70, // .***..
        0x00, // ......
    },
    { // 50
        0x70, // .***..
        0x88, // *...*.
        0x08, // ....*.
        0x30, // ..**..
        0x40, // .*....
        0x80, // *.....
        0xf8, // *****.
        0x00, // ......
    },
    { // 51
        0xf8, // *****.
        0x08, // ....*.
        0x10, // ...*..
        0x30, // ..**..
        0x08, // ....*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 52
        0x10, // ...*..
        0x30, // ..**..
        0x50, // .*.*..
        0x90, // *..*..
        0xf8, // *****.
        0x10, // ...*..
        0x10, // ...*..
        0x00, // ......
    },
    { // 53
        0xf8, // *****.
        0x80, // *.....
        0xf0, // ****..
        0x08, // ....*.
        0x08, // ....*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 54
        0x38, // ..***.
        0x40, // .*....
        0x80, // *.....
        0xf0, // ****..
        0x88, // *...*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 55
        0xf8, // *****.
        0x08, // ....*.
        0x10, // ...*..
        0x20, // ..*...
        0x40, // .*....
        0x40, // .*....
        0x40, // .*....
        0x00, // ......
    },
    { // 56
        0x70, // .***..
        0x88, // *...*.
        0x88, // *...*.
        0x70, // .***..
        0x88, // *...*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 57
        0x70, // .***..
        0x88, // *...*.
        0x88, // *...*.
        0x78, // .****.
        0x08, // ....*.
        0x10, // ...*..
        0xe0, // ***...
        0x00, // ......
    },
    { // 58
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x20, // ..*...
        0x00, // ......
        0x20, // ..*...
        0x00, // ......
        0x00, // ......
    },
    { // 59
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x20, // ..*...
        0x00, // ......
        0x20, // ..*...
        0x20, // ..*...
        0x40, // .*....
    },
    { // 60
        0x10, // ...*..
        0x20, // ..*...
        0x40, // .*....
        0x80, // *.....
        0x40, // .*....
        0x20, // ..*...
        0x10, // ...*..
        0x00, // ......
    },
    { // 61
        0x00, // ......
        0x00, // ......
        0xf8, // *****.
        0x00, // ......
        0xf8, // *****.
        0x00, // ......
        0x00, // ......
        0x00, // ......
    },
    { // 62
        0x40, // .*....
        0x20, // ..*...
        0x10, // ...*..
        0x08, // ....*.
        0x10, // ...*..
        0x20, // ..*...
        0x40, // .*....
        0x00, // ......
    },
    { // 63
        0x70, // .***..
        0x88, // *...*.
        0x10, // ...*..
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
        0x20, // ..*...
        0x00, // ......
    },
    { // 64
        0x70, // .***..
        0x88, // *...*.
        0xa8, // *.*.*.
        0xb8, // *.***.
        0xb0, // *.**..
        0x80, // *.....
        0x78, // .****.
        0x00, // ......
    },
    { // 65
        0x20, // ..*...
        0x50, // .*.*..
        0x88, // *...*.
        0x88, // *...*.
        0xf8, // *****.
        0x88, // *...*.
        0x88, // *...*.
        0x00, // ......
    },
    { // 66
        0xf0, // ****..
        0x88, // *...*.
        0x88, // *...*.
        0xf0, // ****..
        0x88, // *...*.
        0x88, // *...*.
        0xf0, // ****..
        0x00, // ......
    },
    { // 67
        0x70, // .***..
        0x88, // *...*.
        0x80, // *.....
        0x80, // *.....
        0x80, // *.....
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 68
        0xf0, // ****..
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0xf0, // ****..
        0x00, // ......
    },
    { // 69
        0xf8, // *****.
        0x80, // *.....
        0x80, // *.....
        0xf0, // ****..
        0x80, // *.....
        0x80, // *.....
        0xf8, // *****.
        0x00, // ......
    },
    { // 70
        0xf8, // *****.
        0x80, // *.....
        0x80, // *.....
        0xf0, // ****..
        0x80, // *.....
        0x80, // *.....
        0x80, // *.....
        0x00, // ......
    },
    { // 71
        0x70, // .***..
        0x88, // *...*.
        0x80, // *.....
        0x80, // *.....
        0x98, // *..**.
        0x88, // *...*.
        0x78, // .****.
        0x00, // ......
    },
    { // 72
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0xf8, // *****.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x00, // ......
    },
    { // 73
        0x70, // .***..
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x70, // .***..
        0x00, // ......
    },
    { // 74
        0x08, // ....*.
        0x08, // ....*.
        0x08, // ....*.
        0x08, // ....*.
        0x08, // ....*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 75
        0x88, // *...*.
        0x90, // *..*..
        0xa0, // *.*...
        0xc0, // **....
        0xa0, // *.*...
        0x90, // *..*..
        0x88, // *...*.
        0x00, // ......
    },
    { // 76
        0x80, // *.....
        0x80, // *.....
        0x80, // *.....
        0x80, // *.....
        0x80, // *.....
        0x80, // *.....
        0xf8, // *****.
        0x00, // ......
    },
    { // 77
        0x88, // *...*.
        0xd8, // **.**.
        0xa8, // *.*.*.
        0xa8, // *.*.*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x00, // ......
    },
    { // 78
        0x88, // *...*.
        0x88, // *...*.
        0xc8, // **..*.
        0xa8, // *.*.*.
        0x98, // *..**.
        0x88, // *...*.
        0x88, // *...*.
        0x00, // ......
    },
    { // 79
        0x70, // .***..
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 80
        0xf0, // ****..
        0x88, // *...*.
        0x88, // *...*.
        0xf0, // ****..
        0x80, // *.....
        0x80, // *.....
        0x80, // *.....
        0x00, // ......
    },
    { // 81
        0x70, // .***..
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0xa8, // *.*.*.
        0x90, // *..*..
        0x68, // .**.*.
        0x00, // ......
    },
    { // 82
        0xf0, // ****..
        0x88, // *...*.
        0x88, // *...*.
        0xf0, // ****..
        0xa0, // *.*...
        0x90, // *..*..
        0x88, // *...*.
        0x00, // ......
    },
    { // 83
        0x70, // .***..
        0x88, // *...*.
        0x80, // *.....
        0x70, // .***..
        0x08, // ....*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 84
        0xf8, // *****.
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
    },
    { // 85
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x70, // .***..
        0x00, // ......
    },
    { // 86
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0x50, // .*.*..
        0x20, // ..*...
        0x00, // ......
    },
    { // 87
        0x88, // *...*.
        0x88, // *...*.
        0x88, // *...*.
        0xa8, // *.*.*.
        0xa8, // *.*.*.
        0xd8, // **.**.
        0x88, // *...*.
        0x00, // ......
    },
    { // 88
        0x88, // *...*.
        0x88, // *...*.
        0x50, // .*.*..
        0x20, // ..*...
        0x50, // .*.*..
        0x88, // *...*.
        0x88, // *...*.
        0x00, // ......
    },
    { // 89
        0x88, // *...*.
        0x88, // *...*.
        0x50, // .*.*..
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
    },
    { // 90
        0xf8, // *****.
        0x08, // ....*.
        0x10, // ...*..
        0x20, // ..*...
        0x40, // .*....
        0x80, // *.....
        0xf8, // *****.
        0x00, // ......
    },
    { // 91
        0xf8, // *****.
        0xc0, // **....
        0xc0, // **....
        0xc0, // **....
        0xc0, // **....
        0xc0, // **....
        0xf8, // *****.
        0x00, // ......
    },
    { // 92
        0x00, // ......
        0x80, // *.....
        0x40, // .*....
        0x20, // ..*...
        0x10, // ...*..
        0x08, // ....*.
        0x00, // ......
        0x00, // ......
    },
    { // 93
        0xf8, // *****.
        0x18, // ...**.
        0x18, // ...**.
        0x18, // ...**.
        0x18, // ...**.
        0x18, // ...**.
        0xf8, // *****.
        0x00, // ......
    },
    { // 94
        0x00, // ......
        0x00, // ......
        0x20, // ..*...
        0x50, // .*.*..
        0x88, // *...*.
        0x00, // ......
        0x00, // ......
        0x00, // ......
    },
    { // 95
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0xf8, // *****.
    },
    { // 96
        0x40, // .*....
        0x20, // ..*...
        0x10, // ...*..
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
    },
    { // 97
        0x00, // ......
        0x00, // ......
        0x60, // .**...
        0x98, // *..**.
        0x88, // *...*.
        0x98, // *..**.
        0x68, // .**.*.
        0x00, // ......
    },
    { // 98
        0x40, // .*....
        0x40, // .*....
        0x50, // .*.*..
        0x68, // .**.*.
        0x48, // .*..*.
        0x48, // .*..*.
        0x30, // ..**..
        0x00, // ......
    },
    { // 99
        0x00, // ......
        0x00, // ......
        0x38, // ..***.
        0x40, // .*....
        0x40, // .*....
        0x40, // .*....
        0x38, // ..***.
        0x00, // ......
    },
    { // 100
        0x08, // ....*.
        0x08, // ....*.
        0x28, // ..*.*.
        0x58, // .*.**.
        0x48, // .*..*.
        0x48, // .*..*.
        0x30, // ..**..
        0x00, // ......
    },
    { // 101
        0x00, // ......
        0x00, // ......
        0x30, // ..**..
        0x48, // .*..*.
        0x70, // .***..
        0x40, // .*....
        0x38, // ..***.
        0x00, // ......
    },
    { // 102
        0x30, // ..**..
        0x28, // ..*.*.
        0x20, // ..*...
        0x70, // .***..
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
    },
    { // 103
        0x00, // ......
        0x00, // ......
        0x30, // ..**..
        0x48, // .*..*.
        0x48, // .*..*.
        0x38, // ..***.
        0x08, // ....*.
        0x38, // ..***.
    },
    { // 104
        0x40, // .*....
        0x40, // .*....
        0x50, // .*.*..
        0x68, // .**.*.
        0x48, // .*..*.
        0x48, // .*..*.
        0x48, // .*..*.
        0x00, // ......
    },
    { // 105
        0x20, // ..*...
        0x00, // ......
        0x60, // .**...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x70, // .***..
        0x00, // ......
    },
    { // 106
        0x08, // ....*.
        0x00, // ......
        0x08, // ....*.
        0x08, // ....*.
        0x08, // ....*.
        0x08, // ....*.
        0x48, // .*..*.
        0x70, // .***..
    },
    { // 107
        0x40, // .*....
        0x40, // .*....
        0x48, // .*..*.
        0x50, // .*.*..
        0x70, // .***..
        0x48, // .*..*.
        0x48, // .*..*.
        0x00, // ......
    },
    { // 108
        0x60, // .**...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x70, // .***..
        0x00, // ......
    },
    { // 109
        0x00, // ......
        0x00, // ......
        0xd0, // **.*..
        0xa8, // *.*.*.
        0xa8, // *.*.*.
        0xa8, // *.*.*.
        0x88, // *...*.
        0x00, // ......
    },
    { // 110
        0x00, // ......
        0x00, // ......
        0x70, // .***..
        0x48, // .*..*.
        0x48, // .*..*.
        0x48, // .*..*.
        0x48, // .*..*.
        0x00, // ......
    },
    { // 111
        0x00, // ......
        0x00, // ......
        0x30, // ..**..
        0x48, // .*..*.
        0x48, // .*..*.
        0x48, // .*..*.
        0x30, // ..**..
        0x00, // ......
    },
    { // 112
        0x00, // ......
        0x00, // ......
        0x30, // ..**..
        0x48, // .*..*.
        0x48, // .*..*.
        0x70, // .***..
        0x40, // .*....
        0x40, // .*....
    },
    { // 113
        0x00, // ......
        0x00, // ......
        0x38, // ..***.
        0x48, // .*..*.
        0x48, // .*..*.
        0x38, // ..***.
        0x08, // ....*.
        0x08, // ....*.
    },
    { // 114
        0x00, // ......
        0x00, // ......
        0x58, // .*.**.
        0x68, // .**.*.
        0x40, // .*....
        0x40, // .*....
        0x40, // .*....
        0x00, // ......
    },
    { // 115
        0x00, // ......
        0x00, // ......
        0x38, // ..***.
        0x40, // .*....
        0x30, // ..**..
        0x08, // ....*.
        0x70, // .***..
        0x00, // ......
    },
    { // 116
        0x20, // ..*...
        0x20, // ..*...
        0x70, // .***..
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x30, // ..**..
        0x00, // ......
    },
    { // 117
        0x00, // ......
        0x00, // ......
        0x48, // .*..*.
        0x48, // .*..*.
        0x48, // .*..*.
        0x58, // .*.**.
        0x28, // ..*.*.
        0x00, // ......
    },
    { // 118
        0x00, // ......
        0x00, // ......
        0x88, // *...*.
        0x88, // *...*.
        0x50, // .*.*..
        0x50, // .*.*..
        0x20, // ..*...
        0x00, // ......
    },
    { // 119
        0x00, // ......
        0x00, // ......
        0x88, // *...*.
        0xa8, // *.*.*.
        0xa8, // *.*.*.
        0xa8, // *.*.*.
        0xd0, // **.*..
        0x00, // ......
    },
    { // 120
        0x00, // ......
        0x00, // ......
        0xd8, // **.**.
        0x50, // .*.*..
        0x20, // ..*...
        0x50, // .*.*..
        0xd8, // **.**.
        0x00, // ......
    },
    { // 121
        0x00, // ......
        0x00, // ......
        0x48, // .*..*.
        0x48, // .*..*.
        0x58, // .*.**.
        0x28, // ..*.*.
        0x08, // ....*.
        0x18, // ...**.
    },
    { // 122
        0x00, // ......
        0x00, // ......
        0x78, // .****.
        0x08, // ....*.
        0x30, // ..**..
        0x40, // .*....
        0x78, // .****.
        0x00, // ......
    },
    { // 123
        0x18, // ...**.
        0x60, // .**...
        0x40, // .*....
        0x20, // ..*...
        0x40, // .*....
        0x60, // .**...
        0x18, // ...**.
        0x00, // ......
    },
    { // 124
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
        0x20, // ..*...
        0x20, // ..*...
        0x20, // ..*...
        0x00, // ......
    },
    { // 125
        0xc0, // **....
        0x30, // ..**..
        0x10, // ...*..
        0x20, // ..*...
        0x10, // ...*..
        0x30, // ..**..
        0xc0, // **....
        0x00, // ......
    },
    { // 126
        0x40, // .*....
        0xa8, // *.*.*.
        0x10, // ...*..
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
        0x00, // ......
    },
    { // 127
        0xa8, // *.*.*.
        0x50, // .*.*..
        0xa8, // *.*.*.
        0x50, // .*.*..
        0xa8, // *.*.*.
        0x50, // .*.*..
        0xa8, // *.*.*.
        0x00, // ......
    },
    { // 128
        0x00, // ......
        0x00, // ......
        0x30, // ..**..
        0x78, // .****.
        0x78, // .****.
        0x30, // ..**..
        0x00, // ......
        0x00, // ......
    },
};

const int HighCharacterCode      = sizeof(GlyphData)/sizeof(GlyphData[0]);
const int LowCharacterCode       = 0;
const int CharacterCodeCount     = HighCharacterCode - LowCharacterCode;

// Creates an atlas texture for use by GPU shader rasterizers.
// Allocates bitmap buffer as needed into dest.  Any existing texture data in dest
// will be clobbered.
void BlitAtlasTexture(xBitmapData& dest)
{
    // TODO : Turn this into a single-byte alpha mask

    int2 texdim = { 6 * HighCharacterCode, 8 };
    dest.buffer.Resize(texdim.x * texdim.y * 4);
    dest.size = texdim;

    u32* destPtr = (u32*)dest.buffer.GetPtr();
    for (int ch=0; ch<HighCharacterCode; ++ch) {
        for (int y=0; y<8; ++y) {
            for (int bit=0; bit<6; ++bit) {
                u32 isCovered = ((GlyphData[ch][y] >> (7-bit)) & 1) ? 0xff : 0;
                destPtr[(ch*6) + (y * texdim.x) + bit] = (isCovered <<  0) | (isCovered <<  8) | (isCovered << 16) | (isCovered << 24);
            }
        }
    }
}

// returns width of the char
int BlitChar(xBitmapData& dest, int2 topleft, char ch, const float4& color)
{
    if (ch < LowCharacterCode || ch >= HighCharacterCode || ch == ' ') {
        // maybe draw an "invalid char" type character here.. ?
        return 6;
    }

    auto c_fg_i    = color.saturate_to_ubyte();
    auto c_bg_i    = color.saturate_to_ubyte();

    u32* destPtr = (u32*)(dest.buffer.GetPtr()) + (topleft.x + (topleft.y*dest.size.x));
    for (int y=0; y<8; ++y) {
        for (int bit=0; bit<6; ++bit) {
            if (u32 isCovered = ((GlyphData[ch][y] >> (7-bit)) & 1) ? 0xff : 0) {
                destPtr[(y * dest.size.x) + bit] = (isCovered <<  0) | (isCovered <<  8) | (isCovered << 16) | (isCovered << 24);
            }
        }
    }

    return 6;
}

};   // namespace DbgFont
